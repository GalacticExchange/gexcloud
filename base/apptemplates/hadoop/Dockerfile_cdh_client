FROM ubuntu:trusty
USER root
RUN echo "root:vagrant" | chpasswd

RUN apt-get update; apt-get -y install curl wget nano software-properties-common apt-transport-https ruby softflowd \
 nfdump netcat tar sudo openssh-server openssh-client rsync openvpn python2.7 jq iputils-ping telnet zip unzip hardlink \
 ruby-all-dev

# Install Java
ENV JAVA_HOME /usr/lib/jvm/java-8-oracle
ENV PATH $JAVA_HOME/bin:$PATH
RUN add-apt-repository ppa:webupd8team/java
RUN apt-get update
RUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections
RUN apt-get install -q -y oracle-java8-installer
RUN apt-get install -q -y oracle-java8-set-default

# Ruby
#RUN apt-get install -y gawk git-core redis-server zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev \
#libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties libffi-dev nodejs libmysqlclient-dev
#RUN gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
#RUN \curl -sSL https://get.rvm.io | bash -s stable
#RUN echo "source /etc/profile.d/rvm.sh" >> /etc/bash.bashrc
#RUN /bin/bash -c -l "rvm install ruby-2.3.3"
#RUN /bin/bash -c -l "rvm use --default 2.3.3"

# Cloudera repos
RUN curl http://archive.cloudera.com/cdh5/ubuntu/trusty/amd64/cdh/archive.key | apt-key add -
RUN curl http://archive.cloudera.com/cdh5/ubuntu/trusty/amd64/cdh/cloudera.list > /etc/apt/sources.list.d/cloudera.list
RUN curl http://archive.cloudera.com/cm5/ubuntu/trusty/amd64/cm/archive.key | apt-key add -
RUN curl http://archive.cloudera.com/cm5/ubuntu/trusty/amd64/cm/cloudera.list > /etc/apt/sources.list.d/cloudera-manager.list
RUN  wget 'https://archive.cloudera.com/cdh5/ubuntu/trusty/amd64/cdh/cloudera.list'  -O /etc/apt/sources.list.d/cloudera.list
COPY cloudera/cloudera.pref /etc/apt/preferences.d/cloudera.pref
RUN wget https://archive.cloudera.com/cdh5/ubuntu/trusty/amd64/cdh/archive.key -O /tmp/archive.key
RUN  apt-key add /tmp/archive.key
# Kudu repos
RUN add-apt-repository "deb [arch=amd64] http://archive.cloudera.com/kudu/ubuntu/trusty/amd64/kudu trusty-kudu5 contrib"
# Elasticsearch + Kibana repos
RUN wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
RUN echo "deb https://packages.elastic.co/elasticsearch/2.x/debian stable main" | sudo tee -a /etc/apt/sources.list.d/elasticsearch-2.x.list
RUN echo "deb https://packages.elastic.co/kibana/4.6/debian stable main" | sudo tee -a /etc/apt/sources.list.d/kibana.list
# Cassandra repos
RUN echo "deb http://debian.datastax.com/community stable main" | sudo tee -a /etc/apt/sources.list.d/cassandra.sources.list
RUN curl -L https://debian.datastax.com/debian/repo_key | sudo apt-key add -
# Neo4j repos
RUN wget -O - https://debian.neo4j.org/neotechnology.gpg.key | apt-key add -
RUN echo 'deb http://debian.neo4j.org/repo stable/' | tee -a /etc/apt/sources.list.d/neo4j.list

#RUN wget http://archive.cloudera.com/kafka/ubuntu/trusty/amd64/kafka/cloudera.list     -O /etc/apt/sources.list.d/kafka.list
RUN wget -qO - http://packages.confluent.io/deb/3.1/archive.key | sudo apt-key add -
RUN add-apt-repository "deb [arch=amd64] http://packages.confluent.io/deb/3.1 stable main"
RUN add-apt-repository ppa:gluster/glusterfs-3.8

RUN apt-get update --fix-missing; apt-get install -y --allow-unauthenticated neo4j-enterprise=3.2.2 elasticsearch kibana \
 kudu kudu-tserver
RUN apt-get install -y hadoop-yarn-nodemanager hadoop-hdfs-datanode hadoop-mapreduce hadoop-client hadoop-httpfs \
 hue hue-plugins
RUN apt-get install -y flume-ng flume-ng-agent solr solr-mapreduce solr-server sqoop2-server sqoop2-client hive-jdbc
RUN apt-get install -y pig dsc30 bashdb confluent-platform-oss-2.10  ntp glusterfs-server

include(Dockerfile.common)
# passwordless ssh
RUN rm -f /etc/ssh/ssh_host_dsa_key /etc/ssh/ssh_host_rsa_key /root/.ssh/id_rsa
RUN ssh-keygen -q -N "" -t dsa -f /etc/ssh/ssh_host_dsa_key
RUN ssh-keygen -q -N "" -t rsa -f /etc/ssh/ssh_host_rsa_key
RUN ssh-keygen -q -N "" -t rsa -f /root/.ssh/id_rsa
RUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys

#spark-core spark-worker CLOUDERA
RUN curl -o /tmp/spark-2.0.0-bin-hadoop2.7.tgz http://d3kbcqa49mib13.cloudfront.net/spark-2.0.0-bin-hadoop2.7.tgz
RUN tar -zxvf /tmp/spark-2.0.0-bin-hadoop2.7.tgz --directory /usr/lib
RUN mv /usr/lib/spark-2.0.0-bin-hadoop2.7 /usr/lib/spark
RUN mkdir -p /etc/spark/conf && rm /tmp/spark-2.0.0-bin-hadoop2.7.tgz

# Neo4j
RUN mkdir -p /var/run/neo4j && mkdir -p /var/log/neo4j && chmod -R 777 /var/log/neo4j && chmod -R 777 /var/lib/neo4j/
# Monitoring
RUN curl -fsSL https://goss.rocks/install | sh
# Metabase
RUN mkdir -p /usr/local/metabase
RUN wget "downloads.metabase.com/v0.24.2/metabase.jar" -O /usr/local/metabase/metabase.jar

# Nifi
RUN wget "https://s3-us-west-2.amazonaws.com/gex-apps/nifi_stable/nifi-1.1.2-bin.tar.gz" -O /usr/local/nifi-1.1.2-bin.tar.gz
RUN cd /usr/local; tar -xvzf nifi-1.1.2-bin.tar.gz && mv nifi-1.1.2 nifi && rm nifi-1.1.2-bin.tar.gz
RUN wget central.maven.org/maven2/org/apache/kudu/kudu-client/1.3.0/kudu-client-1.3.0.jar -O /usr/local/nifi/lib/kudu-client-1.3.0.jar
RUN wget central.maven.org/maven2/com/stumbleupon/async/1.4.1/async-1.4.1.jar -O /usr/local/nifi/lib/async-1.4.1.jar
RUN wget central.maven.org/maven2/org/json/json/20151123/json-20151123.jar -O /usr/local/nifi/lib/json-20151123.jar
RUN wget central.maven.org/maven2/commons-net/commons-net/3.6/commons-net-3.6.jar -O /usr/local/nifi/lib/commons-net-3.6.jar
RUN gem install impala

# Superset
ARG SUPERSET_VERSION=0.18.4
ARG PANDAS_VERSION=0.19.2
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8 PATH=$PATH:/home/superset/.bin PYTHONPATH=/home/superset/.superset:$PYTHONPATH SUPERSET_VERSION=${SUPERSET_VERSION}
RUN apt-get install -y build-essential libsasl2-dev libssl-dev libffi-dev libpq-dev python-dev \
 libldap2-dev mariadb-client postgresql-client libmysqlclient-dev
#install pip
RUN wget https://bootstrap.pypa.io/get-pip.py
RUN python ./get-pip.py
RUN apt-get install -y python-pip
RUN rm get-pip.py
RUN pip install pandas==${PANDAS_VERSION} flask-mail==0.9.1 flask-oauth==0.12 flask_oauthlib==0.9.3 impyla==0.14.0 mysqlclient==1.3.7 \
    psycopg2==2.6.1 pyhive==0.2.1 pyldap==2.4.28 redis==2.10.5 sqlalchemy-redshift==0.5.0 sqlalchemy-clickhouse==0.1.1.post3 \ superset==$SUPERSET_VERSION thrift==0.9.3
RUN useradd -b /home -U -m superset
COPY superset /home/superset
RUN touch /home/superset/.superset/superset.db && chown -R superset:superset /home/superset && chmod -R 777 /home/superset/.superset
RUN /home/superset/.bin/superset-init

RUN apt-get -y autoremove && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
RUN hardlink -t -o -p /usr