# Creates pseudo distributed hadoop 2.6.0 on Ubuntu 14.04
#
# docker build -t sequenceiq/hadoop-ubuntu:2.6.0 .

FROM ubuntu:wily
USER root

RUN  echo 'Acquire::http { Proxy "http://172.17.0.1:3142"; };' >> /etc/apt/apt.conf.d/01proxy
RUN apt-get update;

RUN echo "root:vagrant" | chpasswd
RUN apt-get update
RUN apt-get install -y curl tar sudo openssh-server openssh-client rsync ruby nano openvpn python jq iputils-ping
#RUN apt-get install -y python-pip python-numpy


include(Dockerfile.common)


#COPY reduce_box_size.sh ${TEMPLATES}

# passwordless ssh
RUN rm -f /etc/ssh/ssh_host_dsa_key /etc/ssh/ssh_host_rsa_key /root/.ssh/id_rsa
RUN ssh-keygen -q -N "" -t dsa -f /etc/ssh/ssh_host_dsa_key
RUN ssh-keygen -q -N "" -t rsa -f /etc/ssh/ssh_host_rsa_key
RUN ssh-keygen -q -N "" -t rsa -f /root/.ssh/id_rsa
RUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys

# Install Java
RUN add-apt-repository ppa:webupd8team/java
RUN apt-get update
RUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections
RUN apt-get install -q -y oracle-java8-installer
RUN apt-get install -q -y oracle-java8-set-default


ENV JAVA_HOME /usr/java/default/
ENV PATH $PATH:$JAVA_HOME/bin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

ENV LD_LIBRARY_PATH /usr/local/hadoop/lib/native/:$LD_LIBRARY_PATH
# hadoop
RUN cat ${TEMPLATES}/download/hadoop-2.6.0.tar.gz | tar -xz -C /usr/local/
RUN cd /usr/local && ln -s ./hadoop-2.6.0 hadoop

ENV HADOOP_PREFIX /usr/local/hadoop
RUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/java/default\nexport HADOOP_PREFIX=/usr/local/hadoop\nexport HADOOP_HOME=/usr/local/hadoop\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh
RUN sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh
#RUN . $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh

RUN mkdir $HADOOP_PREFIX/input
RUN cp $HADOOP_PREFIX/etc/hadoop/*.xml $HADOOP_PREFIX/input



# pseudo distributed

RUN $HADOOP_PREFIX/bin/hdfs namenode -format

# fixing the libhadoop.so like a boss
RUN rm /usr/local/hadoop/lib/native/*
RUN cat ${TEMPLATES}/download/hadoop-native-64-2.6.0.tar|tar -x -C /usr/local/hadoop/lib/native/

ADD auth/ssh_config /root/.ssh/config
ADD auth/sshd_config /etc/ssh/
RUN chmod 600 /root/.ssh/config

# install hive 
#RUN cat ${TEMPLATES}/download/apache-hive-1.0.1-bin.tar.gz | tar -xz -C /usr/local/
#RUN mkdir /var/log/hive 
#RUN chmod 755 /var/log/hive


ADD bootstrap.sh /etc/bootstrap.sh
ADD slaves /usr/local/hadoop-2.6.0/etc/hadoop/slaves

 

RUN chown root:root /etc/bootstrap.sh
RUN chmod 700 /etc/bootstrap.sh

ENV JAVA_HOME /usr/java/default
ENV SPARK_HOME /usr/local/spark
ENV PATH $PATH:$SPARK_HOME/bin

ENV BOOTSTRAP /etc/bootstrap.sh
ENV PATH $PATH:$JAVA_HOME/bin:$SPARK_HOME/bin:

RUN env | grep _ >> /etc/environment
RUN env | grep PATH >> /etc/environment

# workingaround docker.io build error
RUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh
RUN chmod +x /usr/local/hadoop/etc/hadoop/*-env.sh
RUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh



RUN cat ${TEMPLATES}/download/spark-1.4.0-bin-hadoop2.6.tgz | tar -xz -C /usr/local/
RUN cd /usr/local && ln -s spark-1.4.0-bin-hadoop2.6 spark
ENV SPARK_HOME /usr/local/spark
RUN mkdir $SPARK_HOME/yarn-remote-client
ADD yarn-remote-client $SPARK_HOME/yarn-remote-client


RUN rm -rf ${TEMPLATES}/download

RUN apt-get -y autoremove && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


#RUN ${TEMPLATES}/reduce_box_size.sh
